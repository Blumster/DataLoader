using System;
using System.IO;

namespace DataLoader.WAD.Specifics
{
    using Structs;

    public struct VehicleSpecific
    {
        public Single AVDCollisionSpinDamping;
        public Single AVDCollisionThreshold;
        public Single AVDNormalSpinDamping;
        public Single AbsoluteTopSpeed;
        public Single AerodynamicsAirDensity;
        public Single AerodynamicsDrag;
        public Vector3 AerodynamicsExtraGravity;
        public Single AerodynamicsFrontalArea;
        public Single AerodynamicsLift;
        public Int16 ArmorAdd;
        public Single[] AxleScale;
        public FrRr BrakesMaxTorque;
        public FrRr BrakesMinBlockTime;
        public FrRr BrakesPedalInput;
        public Vector3 CenterOfMassModifier;
        public Byte ClassType;
        public Single ClutchDelayTime;
        public Int16 CooldownAdd;
        public RGB[] DefaultColors;
        public Int32 DefaultDriver;
        public Int32 DefaultWheelset;
        public Single DefensivePercent;
        public Int16 DownshiftRPM;
        public Byte[] DrawAxles;
        public Byte[] DrawShocks;
        public Byte EngineType;
        public Single[] GearRatios;
        public Int32 HardPointFacing;
        public Vector3[] HardPoints;
        public Int32 HeatMaxAdd;
        public Vector3 HitchPoint;
        public Int16 InventorySlots;
        public Single MaxTorqueFactor;
        public Single MaxWtArmor;
        public Single MaxWtEngine;
        public Single MaxWtWeaponDrop;
        public Single MaxWtWeaponFront;
        public Single MaxWtWeaponTurret;
        public Single MaximumRPMMax;
        public Single MaximumResistance;
        public Single MeleeScaler;
        public Single MinTorqueFactor;
        public Single MinimumRPM;
        public Single MinimumResistance;
        public Byte NumberOfGears;
        public Byte NumberOfTricks;
        public Byte NumberOfTrims;
        public Single OptimumRPMMax;
        public Single OptimumRPMMin;
        public Single OptimumResistance;
        public Int32 PowerMaxAdd;
        public Single PushBottomUp;
        public Single RVExtraAngularImpulse;
        public Single RVExtraTorqueFactor;
        public Single RVFrictionEqualizer;
        public Single RVInertiaPitch;
        public Single RVInertiaRoll;
        public Single RVInertiaYaw;
        public Single RVSpinTorquePitch;
        public Single RVSpinTorqueRoll;
        public Single RVSpinTorqueYaw;
        public Single RearWheelFrictionScalar;
        public Single ReverseGearRation;
        public Vector3[] ShockAttachPoints;
        public Single ShockEffectThreshold;
        public Single[] ShockScale;
        public Vector3 SkirtExtents;
        public Single SpeedLimiter;
        public Single SteeringFullSpeedLimit;
        public Single SteeringMaxAngle;
        public FrRr SuspensionDampeningCoefficientCompression;
        public FrRr SuspensionDampeningCoefficientExtension;
        public FrRr SuspensionLength;
        public FrRr SuspensionStrength;
        public Int16 TorqueMax;
        public Single TransmissionRatio;
        public VehicleTrick[] Tricks;
        public Byte TurretSize;
        public Int16 UpshiftRPM;
        public Int16 VehicleFlags;
        public Byte VehicleType;
        public Byte WheelAxle;
        public Byte WheelExistance;
        public Vector3[] WheelHardPoints;
        public Single[] WheelRadius;
        public FrRr WheelTorqueRatios;
        public Single[] WheelWidth;
        private Byte[] _skip1;
        private Byte[] _skip2;
        private Byte[] _skip3;
        private Byte[] _skip4;
        private Byte[] _skip5;
        private Byte _skip6;
        private Byte[] _skip7;

        public static VehicleSpecific Read(BinaryReader br)
        {
            return new VehicleSpecific
            {
                VehicleType = br.ReadByte(),
                ClassType = br.ReadByte(),
                _skip1 = br.ReadBytes(2),
                DefaultColors = br.ReadStruct<RGB>(3),
                HardPoints = br.ReadStruct<Vector3>(3),
                HardPointFacing = br.ReadInt32(),
                WheelExistance = br.ReadByte(),
                WheelAxle = br.ReadByte(),
                _skip2 = br.ReadBytes(2),
                WheelHardPoints = br.ReadStruct<Vector3>(6),
                SuspensionLength = br.ReadStruct<FrRr>(),
                SuspensionStrength = br.ReadStruct<FrRr>(),
                SuspensionDampeningCoefficientCompression = br.ReadStruct<FrRr>(),
                SuspensionDampeningCoefficientExtension = br.ReadStruct<FrRr>(),
                BrakesMaxTorque = br.ReadStruct<FrRr>(),
                BrakesMinBlockTime = br.ReadStruct<FrRr>(),
                BrakesPedalInput = br.ReadStruct<FrRr>(),
                SteeringMaxAngle = br.ReadSingle(),
                SteeringFullSpeedLimit = br.ReadSingle(),
                AerodynamicsFrontalArea = br.ReadSingle(),
                AerodynamicsDrag = br.ReadSingle(),
                AerodynamicsLift = br.ReadSingle(),
                AerodynamicsAirDensity = br.ReadSingle(),
                AerodynamicsExtraGravity = br.ReadStruct<Vector3>(),
                AVDNormalSpinDamping = br.ReadSingle(),
                AVDCollisionSpinDamping = br.ReadSingle(),
                AVDCollisionThreshold = br.ReadSingle(),
                RVFrictionEqualizer = br.ReadSingle(),
                RVSpinTorqueRoll = br.ReadSingle(),
                RVSpinTorquePitch = br.ReadSingle(),
                RVSpinTorqueYaw = br.ReadSingle(),
                RVExtraAngularImpulse = br.ReadSingle(),
                RVExtraTorqueFactor = br.ReadSingle(),
                RVInertiaRoll = br.ReadSingle(),
                RVInertiaPitch = br.ReadSingle(),
                RVInertiaYaw = br.ReadSingle(),
                WheelTorqueRatios = br.ReadStruct<FrRr>(),
                VehicleFlags = br.ReadInt16(),
                _skip3 = br.ReadBytes(2),
                HitchPoint = br.ReadStruct<Vector3>(),
                WheelRadius = br.Read<Single>(6),
                WheelWidth = br.Read<Single>(6),
                SpeedLimiter = br.ReadSingle(),
                AbsoluteTopSpeed = br.ReadSingle(),
                ShockAttachPoints = br.ReadStruct<Vector3>(6),
                DrawAxles = br.ReadBytes(2),
                DrawShocks = br.ReadBytes(2),
                AxleScale = br.Read<Single>(2),
                ShockScale = br.Read<Single>(2),
                ShockEffectThreshold = br.ReadSingle(),
                EngineType = br.ReadByte(),
                NumberOfGears = br.ReadByte(),
                TorqueMax = br.ReadInt16(),
                DownshiftRPM = br.ReadInt16(),
                UpshiftRPM = br.ReadInt16(),
                MinTorqueFactor = br.ReadSingle(),
                MaxTorqueFactor = br.ReadSingle(),
                MinimumRPM = br.ReadSingle(),
                OptimumRPMMin = br.ReadSingle(),
                OptimumRPMMax = br.ReadSingle(),
                MaximumRPMMax = br.ReadSingle(),
                MinimumResistance = br.ReadSingle(),
                OptimumResistance = br.ReadSingle(),
                MaximumResistance = br.ReadSingle(),
                TransmissionRatio = br.ReadSingle(),
                ClutchDelayTime = br.ReadSingle(),
                ReverseGearRation = br.ReadSingle(),
                GearRatios = br.Read<Single>(5),
                ArmorAdd = br.ReadInt16(),
                _skip4 = br.ReadBytes(2),
                PowerMaxAdd = br.ReadInt32(),
                HeatMaxAdd = br.ReadInt32(),
                CooldownAdd = br.ReadInt16(),
                _skip5 = br.ReadBytes(2),
                DefaultWheelset = br.ReadInt32(),
                DefaultDriver = br.ReadInt32(),
                MaxWtWeaponFront = br.ReadSingle(),
                MaxWtWeaponTurret = br.ReadSingle(),
                MaxWtWeaponDrop = br.ReadSingle(),
                MaxWtArmor = br.ReadSingle(),
                MaxWtEngine = br.ReadSingle(),
                DefensivePercent = br.ReadSingle(),
                TurretSize = br.ReadByte(),
                NumberOfTrims = br.ReadByte(),
                NumberOfTricks = br.ReadByte(),
                _skip6 = br.ReadByte(),
                MeleeScaler = br.ReadSingle(),
                InventorySlots = br.ReadInt16(),
                _skip7 = br.ReadBytes(6),
                //Tricks = br.Read<Int32>(1),
                SkirtExtents = br.ReadStruct<Vector3>(),
                PushBottomUp = br.ReadSingle(),
                CenterOfMassModifier = br.ReadStruct<Vector3>(),
                RearWheelFrictionScalar = br.ReadSingle()
            };
        }
    }
}